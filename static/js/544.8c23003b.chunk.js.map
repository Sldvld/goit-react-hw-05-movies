{"version":3,"file":"static/js/544.8c23003b.chunk.js","mappings":"+SAEMA,EAAU,mCACVC,EAAW,+BAEJC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,uCACqBD,IAFd,uBACtBI,EADsB,EACtBA,KADsB,kBAIvBA,EAAKC,SAJkB,2CAAH,qDAMhBC,EAAW,mCAAG,WAAMC,GAAN,yFACFJ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,4DAC0EO,IAFxE,uBACjBH,EADiB,EACjBA,KADiB,kBAIlBA,EAAKC,SAJa,2CAAH,sDAMXG,EAAS,mCAAG,WAAMC,GAAN,yFACAN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAQ,EADA,oBACcT,EADd,+CADA,uBACfI,EADe,EACfA,KADe,kBAIhBA,GAJgB,2CAAH,sDAMTM,EAAU,mCAAG,WAAMD,GAAN,yFACDN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAQ,EADA,4BACsBT,EADtB,+CADC,uBAChBI,EADgB,EAChBA,KADgB,kBAIjBA,EAAKO,MAJY,2CAAH,sDAMVC,EAAY,mCAAG,WAAMH,GAAN,yFACHN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAQ,EADA,4BACsBT,EADtB,2BADG,uBAClBI,EADkB,EAClBA,KADkB,kBAInBA,EAAKC,SAJc,2CAAH,qD,oFCzBZQ,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,gBAAGR,EAAH,EAAGA,GAAIS,EAAP,EAAOA,MAAOC,EAAd,EAAcA,cAAeC,EAA7B,EAA6BA,YAA7B,OACV,yBACE,0BACE,UAAC,KAAD,CAAMC,GAAE,kBAAaZ,GAAMa,MAAO,CAAEC,KAAMR,GAA1C,WACE,gBACES,MAAM,MACNC,IAAK,mCAAmCC,OAAON,GAC/CO,IAAKR,KAEP,8BAAID,QAAJ,IAAIA,EAAAA,EAASC,UARVV,EADC,KAgBjB,C,uFCFD,UAjBa,WACX,OAA4BmB,EAAAA,EAAAA,UAAS,IAArC,eAAOd,EAAP,KAAee,EAAf,KACMC,EAAsB,OAAXhB,EAMjB,OAJAiB,EAAAA,EAAAA,YAAU,YACR7B,EAAAA,EAAAA,MAAmB8B,KAAKH,EACzB,GAAE,KAGD,iCACE,4CACEC,IAAY,SAAC,IAAD,IACbA,IAAY,SAAC,IAAD,CAAYhB,OAAQA,MAGtC,C","sources":["API/API.js","components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'b020810aa3cd987a958ad25364f86170';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendsByDay = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return data.results;\n};\nexport const fetchByName = async name => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${name}`\n  );\n  return data.results;\n};\nexport const fetchById = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  );\n  return data;\n};\nexport const fetchCasts = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  );\n  return data.cast;\n};\nexport const fetchReviews = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data.results;\n};\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ id, title, original_name, poster_path }) => (\n        <li key={id}>\n          <div>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <img\n                width=\"250\"\n                src={'https://image.tmdb.org/t/p/w500/'.concat(poster_path)}\n                alt={original_name}\n              />\n              <p>{title ?? original_name}</p>\n            </Link>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      original_name: PropTypes.string,\n      poster_path: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n","import { MoviesList } from 'components/MoviesList/MoviesList';\nimport { useState, useEffect } from 'react';\nimport { fetchTrendsByDay } from '../../API/API';\nimport Loader from 'Loader/Loader';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const isLoaded = movies !== null;\n\n  useEffect(() => {\n    fetchTrendsByDay().then(setMovies);\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n      {!isLoaded && <Loader />}\n      {isLoaded && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["API_KEY","BASE_URL","fetchTrendsByDay","axios","data","results","fetchByName","name","fetchById","id","fetchCasts","cast","fetchReviews","MoviesList","movies","location","useLocation","map","title","original_name","poster_path","to","state","from","width","src","concat","alt","useState","setMovies","isLoaded","useEffect","then"],"sourceRoot":""}